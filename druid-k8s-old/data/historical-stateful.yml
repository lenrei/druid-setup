apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: druid
    component: historical
  name: druid-historical
  namespace: druid
spec:
  serviceName: druid-historical
  replicas: 1
  selector:
    matchLabels:
      app: druid
      component: historical
  template:
    metadata:
      labels:
        app: druid
        component: historical
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "druid"
                  release: "druid"
                  component: "historical"
      containers:
      - name: druid
        args: [ "historical" ]
        env:
        - name: druid_zk_service_host
          value: druid-zookeeper-headless
        - name: DB_HOST
          value: druid-mysql
        - name: DB_TYPE
          value: mysql
        - name: DB_USERNAME
          value: druid
        - name: DB_PASSWORD
          value: druid
        - name: DB_DBNAME
          value: druid
        - name: DB_PORT
          value: "3306"
        - name: JAVA_OPTS
          value: -Xms2G -Xmx2G -XX:MaxDirectMemorySize=8g
        - name: DRUID_USE_CONTAINER_IP
          value: "true"
        resources:
            {}
        image: "apache/druid:0.17.0"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 8083
          name: http
        volumeMounts:
        - mountPath: /var/druid/
          name: data
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "4Gi"